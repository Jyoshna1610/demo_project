pipeline {
   agent{label "agentfarm"}
   stages{
     stage('Update linux'){
       steps{
	  sh 'sudo apt-get update'
        }
    }
stage('Install ChefDK'){
  steps{
    scripts{
        def chefdkExists = fileExits 'usr/bin/chef-client'
         if(chefdkExists){
         echo 'Skipping Chef install already installed'
         }else{
           sh 'wget https://packages.chef.io/files/stable/chefdk/3.9.0/ubuntu/16.04/
           sh 'sudo dpkg -i chefdk_3.9.0-1_amd64.deb'
       }
    }
 }
}
stage('Download Cookbook'){
  steps{
    git credentialsId: 'github-creds', url: <github url>
  }
}

stage('Install Docker'){
 steps{
  script{
      def dockerExists = fileExists '/usr/bin/docker'
      if(dockerExists){
       echo 'Skipping Docker install .. already installed'
     }else{
 Sh 'wget https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/container.io_1.2.5-1_amd64.deb'
 Sh 'wget https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/docker-ce-cli_18.09.6~3-0~ubuntu-xenial_amd64.deb'
 Sh 'wget https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/docker-ce_18.09.6~3-0~ubuntu-xenial_amd64.deb'
 Sh 'sudo usermod -aG root,docker ubuntu'
}
sh'sudo docker run hello-world'

}
}
}

stage('Install Ruby and Test Kitchen'){
steps{
   Sh 'sudo apt-get install -y rubygems ruby-dev'
   Sh 'chef gem install kitchen-docker'
  }
}
 
stage('Run Test Kitchen'){
  steps{
    sh'sudo kitchen test'
}
}
stage('Slack Notification'){
  steps{
     slackSend message:"Team DevOps:Please approve ${env.JOB NAME} ${env.BUILD_NUMBER} (<$env.JOB_URL}|Open>)"
    }
}
stage('Let the human feel important'){
    input { message "Click Proceed to continue the build"}
    steps {
      echo "User Input"
    }
}
stage('Upload Cookbook to Chef Server Coverage Nodes'){
steps{

  withCredentials([zip(credentialsID:'chef-server-creds',variable:'CHEFREPO')]){
  sh'mkdir-p $CHEFREPO/chef-repo/cookbooks/apache'
  sh 'sudo rm -rf $WORKSPACE/Berksfile.lock'
  sh 'mv $WORKSPACE/* $CHEFREPO/chef-repo/cookbooks/apache'
  sh "knife cookbook upload apache --force -o $CHEFREPO/chef-repo/cookbooks -c $CHEFREPO/chef-repo/.chef/knife.rb"
withCrecdentials([sshUserPrivateKey(credentialsID:agent-creds',keyFilevariable:'AGENT_SSHKEY', passphraseVariables:'',
sh "knife ssh 'role:webserver' -x ubuntu -i $AGENT_SSHKEY 'sudo Chef-client' -c $CHEFREPO/chef-repo/.chef/knife.rb"
}
}




      